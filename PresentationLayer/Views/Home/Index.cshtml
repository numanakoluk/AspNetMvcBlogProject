@using EntiyLayers
@model List<Note>
@{
    ViewBag.Title = "Index";
}

<!-- Page Content -->
<div class="container">
    <div class="row">
        <div class="col-md-3">
            <!----Kategoriler-->
            @Html.Partial("_PartialCategories")
        </div>

        <div class="col-md-9">
            <!----CarouselYanaOynayanSekme-->
            <div class="row carousel-holder">
                <div class="col-md-12">
                    <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
                        <ol class="carousel-indicators">
                            <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>
                            <li data-target="#carousel-example-generic" data-slide-to="1"></li>
                            <li data-target="#carousel-example-generic" data-slide-to="2"></li>
                        </ol>
                        <div class="carousel-inner">
                            <div class="item active">
                                <img class="slide-image" src="https://www.wpsitesi.com/wp-content/uploads/2016/01/reklam-ekleme.jpg" alt="">
                            </div>
                            <div class="item">
                                <img class="slide-image" src="https://www.wpsitesi.com/wp-content/uploads/2016/01/reklam-ekleme.jpg" alt="">
                            </div>
                            <div class="item">
                                <img class="slide-image" src="https://www.wpsitesi.com/wp-content/uploads/2016/01/reklam-ekleme.jpg" alt="">
                            </div>
                        </div>
                        <a class="left carousel-control" href="#carousel-example-generic" data-slide="prev">
                            <span class="glyphicon glyphicon-chevron-left"></span>
                        </a>
                        <a class="right carousel-control" href="#carousel-example-generic" data-slide="next">
                            <span class="glyphicon glyphicon-chevron-right"></span>
                        </a>
                    </div>
                </div>
            </div>

            <!-- Notlar -->
            <div class="row">
                @foreach (Note note in Model)
                {
                    <div class="col-sm-4 col-lg-4 col-md-4" data-note-id="@note.Id">
                        <div class="thumbnail">
                            <img src="https://picsum.photos/320/150?random=@(Model.IndexOf(note) % 10)" alt="@note.Title">
                            <div class="caption">
                                <h4>
                                    <a href="#" data-toggle="modal" data-target="#modal_notedetail" data-note-id="@note.Id">
                                        @note.Title
                                    </a>
                                </h4>
                                <h6 class="text-right">
                                    @note.Owner.UserName <span class="glyphicon glyphicon-user"></span><br />
                                    @note.ModifiedOn.ToString("dd.MM.yy HH:mm") <span class="glyphicon glyphicon-time"></span>
                                </h6>

                                @if (string.IsNullOrEmpty(note.Text) == false && note.Text.Length > 75)
                                {
                                    <p>@(note.Text.Substring(0, 75) + "...")</p>
                                    <p class="pull-right">
                                        <a href="#" data-toggle="modal" data-target="#modal_notedetail" data-note-id="@note.Id" class="btn btn-default btn-sm">devamı <span class="glyphicon glyphicon-chevron-right"></span></a>
                                    </p>
                                }
                                else
                                {
                                    <p>@note.Text</p>
                                }

                            </div>

                            <div class="ratings">
                                <p class="pull-right">
                                    <button class="btn btn-default btn-sm" data-toggle="modal" data-target="#modal_comment" data-note-id="@note.Id">
                                        <span class="glyphicon glyphicon-comment"></span> Yorumlar
                                    </button>
                                </p>
                                <p>
                                    <button class="btn btn-default btn-sm" type="button" data-liked="false" data-note-id="@note.Id">
                                        <span class="glyphicon glyphicon-star-empty like-star"></span>&nbsp;
                                        <span class="like-count">@note.LikeCount</span>
                                    </button>
                                </p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!--İlgili sectionu çağırıyorum.Burada sectionu doldurmak istediğimi söyledim.-->
@section footer{
    @Html.Partial("_PartialFooter")

}
<!--Devamlı Pop up eklememek için bootstrap helperi kullancam.-->
@BootStrap.ModalPopup(id: "modal_comment", title: "Yorumlar")
@BootStrap.ModalPopup(id: "modal_notedetail", title:"Not Detayı")

<script>
    var noteid = -1; //başta -1 dönsün dışarıdan başka yerden atayabileyim.
    var modalCommentBodyId = "#modal_comment_body";

    $(function () {
        $('#modal_comment').on('show.bs.modal', function (e) {
            var btn = $(e.relatedTarget);
            noteid = btn.data("note-id"); //Bu attributedeki değeri döndürecek.
            $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteid);
        })
    });
    function doComment(btn, e, commentid, spanid) {


        var button = $(btn); //jquery'le gelen elementleri karşılamak için bunu kullanmak gerek.
        var mode = button.data("edit-mode");


        if (e === "edit_clicked") {
            //ilk tıkladığımızda modu false çevirecek.Sonrakinde true'ye çevirecek.
            if (!mode) {
                button.data("edit-mode", true);
                button.removeClass("btn-warning");
                button.addClass("btn-success");
                var btnSpan = button.find("span");
                btnSpan.removeClass("glyphicon-edit");
                btnSpan.addClass("glyphicon-ok");

                //Yazı Renk Değiştirme
                $(spanid).addClass("editable");

                //Mod editse bunu yap.
                $(spanid).attr("contenteditable", true);
                //Kullanıcı tıklamadan gitmek için focus.
                $(spanid).focus();
            }
            else {

                button.data("edit-mode", false);
                button.addClass("btn-warning");
                button.removeClass("btn-success");
                var btnSpan = button.find("span");
                btnSpan.addClass("glyphicon-edit");
                btnSpan.removeClass("glyphicon-ok");

                //Yazı rengi remove et.
                $(spanid).removeClass("editable");


                //Mod editse bunu yap.
                $(spanid).attr("contenteditable", false);


                var txt = $(spanid).text();
                //ajax
                $.ajax({
                    method: "POST",
                    url: "/Comment/Edit/" + commentid,
                    data: { text: txt }

                }).done(function (data) {

                    if (data.result) {
                        //Yorumlar partial tekrar yüklenir
                        $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteid);
                    }
                    else {
                        alert("Yorum Güncellenemedi.");
                    }

                    //internet koptuğu anda.
                }).fail(function () {
                    alert("Sunucu ile bağlantı kurulamadı.");
                });
            }

        }
        else if (e === "delete_clicked") {
            var dialog_res = confirm("Yorum silinsin mi?");
            if (!dialog_res) return false;

            $.ajax({
                method: "GET",
                url: "/Comment/Delete/" + commentid
            }).done(function (data) {

                if (data.result) {
                    // yorumlar partial tekrar yüklenir..
                    $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteid);
                } else {
                    alert("Yorum silinemedi.");
                }

            }).fail(function () {
                alert("Sunucu ile bağlantı kurulamadı.");
            });

        } else if (e === "new_clicked") {

            var txt = $("#new_comment_text").val();

            $.ajax({
                method: "POST",
                url: "/Comment/Create",
                data: { "text": txt, "noteid": noteid }
            }).done(function (data) {

                if (data.result) {
                    // yorumlar partial tekrar yüklenir..
                    $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteid);
                } else {
                    alert("Yorum eklenemedi.");
                }

            }).fail(function () {
                alert("Sunucu ile bağlantı kurulamadı.");
            });
        }
    }
</script>

<script>
    $(function () {

        var noteids = [];

        $("div[data-note-id]").each(function (i, e) {
            noteids.push($(e).data("note-id"));
        });

        $.ajax({
            method: "POST",
            url: "/Note/GetLiked",
            data: { ids: noteids }
        }).done(function (data) {
     

            if (data.result != null && data.result.length > 0) {
                for (var i = 0; i < data.result.length; i++) {
                    var id = data.result[i];
                    var likedNote = $("div[data-note-id=" + id + "]");
                    var btn = likedNote.find("button[data-liked]");
                    var span = btn.children().first();

                    btn.data("liked", true);
                    span.removeClass("glyphicon-star-empty");
                    span.addClass("glyphicon-star");
                }

            }

        }).fail(function () {

        });

        $("button[data-liked]").click(function () {
            var btn = $(this);
            var liked = btn.data("liked");
            var noteid = btn.data("note-id");
            var spanStar = btn.find("span.like-star");
            var spanCount = btn.find("span.like-count");

            console.log(liked);
            console.log("like count : " + spanCount.text());

            $.ajax({
                method: "POST",
                url: "/Note/SetLikeState",
                data: { "noteid": noteid, "liked": !liked }
            }).done(function (data) {

                console.log(data);

                if (data.hasError) {
                    alert(data.errorMessage);
                } else {
                    liked = !liked;
                    btn.data("liked", liked);
                    spanCount.text(data.result);

                    console.log("like count(after) : " + spanCount.text());


                    spanStar.removeClass("glyphicon-star-empty");
                    spanStar.removeClass("glyphicon-star");

                    if (liked) {
                        spanStar.addClass("glyphicon-star");
                    } else {
                        spanStar.addClass("glyphicon-star-empty");
                    }

                }

            }).fail(function () {
                alert("Sunucu ile bağlantı kurulamadı.");
            })

        });
    });
</script>

<script>
    $(function () {

        $('#modal_notedetail').on('show.bs.modal', function (e) {

            var btn = $(e.relatedTarget);
            noteid = btn.data("note-id");

            $("#modal_notedetail_body").load("/Note/GetNoteText/" + noteid);
        })

    });
</script>